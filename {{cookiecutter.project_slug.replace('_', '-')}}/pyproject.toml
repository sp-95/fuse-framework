{%- set license_classifiers = {
    "MIT license": "License :: OSI Approved :: MIT License",
    "BSD license": "License :: OSI Approved :: BSD License",
    "ISC license": "License :: OSI Approved :: ISC License (ISCL)",
    "Apache Software License 2.0": "License :: OSI Approved :: Apache Software License",
    "GNU General Public License v3": "License :: OSI Approved :: GNU General Public License v3 (GPLv3)"
} -%}
[tool]
[tool.poetry]
name = "{{ cookiecutter.project_slug.replace('_', '-') }}"
version = "{{ cookiecutter.version }}"
homepage = "https://github.com/{{ cookiecutter.github_username }}/{{ cookiecutter.project_slug.replace('_', '-') }}"
description = "Top-level package for {{ cookiecutter.project_name }}."
authors = ["{{ cookiecutter.full_name.replace('\"', '\\\"') }} <{{ cookiecutter.email }}>"]
readme = "README.rst"
{%- if cookiecutter.open_source_license in license_classifiers %}
license =  "{{ cookiecutter.open_source_license }}"
{%- endif %}
keywords = []
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Intended Audience :: Developers",
{%- if cookiecutter.open_source_license in license_classifiers %}
    "{{ license_classifiers[cookiecutter.open_source_license] }}",
{%- endif %}
    "Natural Language :: English",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
]
packages = [
    { include = "{{ cookiecutter.project_slug }}" },
    { include = "tests", format = "sdist" },
]

[tool.poetry.dependencies]
python = "^3.7"
click = "*"
dynaconf = "*"

[tool.poetry.dev-dependencies]
pytest = "*"
pytest-cov = "*"
tox = "*"
flake8 = "*"
sphinx = "*"
sphinx-rtd-theme = "*"
tomlkit = "*"
pre-commit = "*"

[tool.poetry.scripts]
{{ cookiecutter.project_slug.replace('_', '-') }} = "{{ cookiecutter.project_slug }}.cli:main"

[pytest]
testpaths = "tests"

[flake8]
max-line-length = 88
max-complexity = 10

[mypy]
ignore_missing_imports = "True"
check_untyped_defs = "True"
warn_redundant_casts = "True"
warn_unreachable = "True"

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"
